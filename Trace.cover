       """
       When running the program, use:
       >>>python Trace.py > Trace2dis.dat>&1   
       
       
       """
       
>>>>>> import sys
>>>>>> import trace
       
>>>>>> tracer = trace.Trace(
>>>>>>        ignoredirs=[sys.prefix, sys.exec_prefix],
>>>>>>        trace=1,
>>>>>>        count = 1, infile=None, outfile=None) #will be given an outfile in final code
       
       
>>>>>> def hello():
>>>>>>        print("Hello, World!")
       
>>>>>> def test_for_loop():
>>>>>>     out = ""
>>>>>>     for i in range(5):
>>>>>>         out = out + str(i)
>>>>>>     print(out)
       
       
>>>>>> def test_import():
>>>>>>     import math
>>>>>>     print(math.pi, math.e)
>>>>>>     print(math.sin(2))
>>>>>>     from math import sqrt
>>>>>>     print(sqrt(2))
       
>>>>>> def test_recursion():
>>>>>>     def fact(n):
>>>>>>         if n <= 1:
>>>>>>             return 1
               else:
>>>>>>             return n * fact(n-1)
>>>>>>     f6 = fact(6)
>>>>>>     print(f6)
       
>>>>>> def bubble_sort_bad(nums):
    5:     for i in range(len(nums) - 1):
    4:         if nums[i] > nums[i + 1]:
                      # Swap the elements
    3:                nums[i], nums[i + 1] = nums[i + 1], nums[i]
       
>>>>>> def bubble_sort_good(nums):
           # We set swapped to True so the loop looks runs at least once
    1:     swapped = True
    3:     while swapped:
    2:         swapped = False
   10:         for i in range(len(nums) - 1):
    8:             if nums[i] > nums[i + 1]:
                       # Swap the elements
    2:                 nums[i], nums[i + 1] = nums[i + 1], nums[i]
                       # Set the flag to True so we'll loop again
    2:                 swapped = True
       
       
>>>>>> def dis_track():
              #take in the Trace2dis.dat file line by line and output the dis
>>>>>>        pass
       
       
       
       
>>>>>> def main():
    1:        random_list_of_nums = [12, 8, 3, 20, 11]
    1:        bubble_sort_bad(random_list_of_nums)
    1:        print('bad: ', random_list_of_nums)
    1:        bubble_sort_good(random_list_of_nums)
    1:        print('good: ', random_list_of_nums)
       
       
>>>>>> tracer.run('main()')
       
       
>>>>>> results = tracer.results()
>>>>>> results.write_results(show_missing=True,summary=True,coverdir=".")
       
       
